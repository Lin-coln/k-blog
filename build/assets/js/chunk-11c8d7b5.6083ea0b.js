(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-11c8d7b5"],{"0474":function(e,t,n){"use strict";var r=n("8a96"),o=n.n(r);o.a},"356f":function(e,t,n){},"3cf1":function(e,t,n){"use strict";n.r(t);var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("mdlayout",{attrs:{mdData:e.note}})},o=[],i=n("755c"),s=n("f0f3"),a={components:{mdlayout:i["a"]},computed:{note:function(){return s}}},l=a,c=n("2877"),d=Object(c["a"])(l,r,o,!1,null,null,null);t["default"]=d.exports},"755c":function(e,t,n){"use strict";var r=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("scroll",{attrs:{bgColor:e.bgColor,bgColorDark:e.bgColorDark,paddingTop:"0px",paddingBottom:e.paddingCpt,paddingLeft:e.paddingCpt,paddingRight:e.paddingCpt}},[n("div",{style:e.style},[n("styler",{attrs:{md:e.mdData}})],1)])},o=[],i=n("5530"),s=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{ref:"layout",staticClass:"scrollCtn",style:e.style},[n("div",{style:{minHeight:"calc(100vh - "+this.appbarHeightStr+")",width:"100%",height:"auto"}},[e._t("default")],2)])},a=[],l=(n("99af"),n("2f62")),c={props:{bgColor:{type:String,default:"transparent"},bgColorDark:{type:String,default:"transparent"},offset:{type:String,default:"0px"},paddingLeft:{type:String,default:"0px"},paddingRight:{type:String,default:"0px"},paddingTop:{type:String,default:"0px"},paddingBottom:{type:String,default:"0px"}},computed:Object(i["a"])(Object(i["a"])(Object(i["a"])({},Object(l["d"])({appbarSolid:function(e){return e.cpn.appbar.appbarSolid},isDark:function(e){return e.theme.isDark}})),Object(l["b"])(["appbarHeightStr","appbarHeightWidthExpandStr"])),{},{style:function(){return{backgroundColor:this.isDark?this.bgColorDark:this.bgColor,paddingTop:this.appbarSolid?"calc(".concat(this.appbarHeightWidthExpandStr," + ").concat(this.paddingTop,")"):"calc(".concat(this.appbarHeightWidthExpandStr," + ").concat(this.paddingTop," \n                    - ").concat(this.offset,")"),paddingBottom:this.paddingBottom,paddingLeft:this.paddingLeft,paddingRight:this.paddingRight}}}),methods:Object(i["a"])(Object(i["a"])({},Object(l["c"])(["setAppbarSolid"])),{},{scroll:function(e){var t=window.event||e,n=this.$refs.layout.scrollTop,r=0!=n;r!=this.appbarSolid&&this.setAppbarSolid(r),this.$emit("handleScroll",t,this.$refs.layout)}}),mounted:function(){this.setAppbarSolid(!1),this.$refs.layout.addEventListener("scroll",this.scroll)},beforeDestroy:function(){this.$refs.layout.removeEventListener("scroll",this.scroll)}},d=c,p=(n("f3d3"),n("2877")),g=Object(p["a"])(d,s,a,!1,null,"9d54f902",null),u=g.exports,h=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"md-container"},[n("div",{staticClass:"md-root",style:e.style,domProps:{innerHTML:e._s(e.md)}})])},w=[],f={props:{md:String},computed:Object(i["a"])(Object(i["a"])({},Object(l["d"])({isDark:function(e){return e.theme.isDark}})),{},{h1Color:function(){return"hsla(0,0%,\n      ".concat(this.isDark?100:0,"%, ").concat(this.isDark?95:90,"%)")},h2Color:function(){return"hsla(0,0%,\n      ".concat(this.isDark?100:0,"%, ").concat(this.isDark?90:70,"%)")},h3Color:function(){return"hsla(0,0%,\n      ".concat(this.isDark?100:0,"%, ").concat(this.isDark?70:60,"%)")},hrColor:function(){return"hsla(0,0%,\n      ".concat(this.isDark?100:0,"%, ").concat((this.isDark,10),"%)")},txtColor:function(){return"hsla(0,0%,\n      ".concat(this.isDark?100:0,"%, ").concat(this.isDark?70:80,"%)")},preColor:function(){return"hsla(0,0%,\n      ".concat((this.isDark,0),"%, ").concat(this.isDark?30:6,"%)")},refColor:function(){return"hsla(0,0%,\n      ".concat((this.isDark,0),"%, ").concat(this.isDark?20:6,"%)")},refLineColor:function(){return"hsla(0,0%,\n      ".concat(this.isDark?100:0,"%, ").concat(this.isDark?50:40,"%)")},style:function(){return{"--h1Color":this.h1Color,"--h2Color":this.h2Color,"--h3Color":this.h3Color,"--hrColor":this.hrColor,"--txtColor":this.txtColor,"--preColor":this.preColor,"--refColor":this.refColor,"--refLineColor":this.refLineColor}}})},m=f,b=(n("0474"),Object(p["a"])(m,h,w,!1,null,null,null)),v=b.exports,y={components:{scroll:u,styler:v},props:{mdData:String},data:function(){return{bgColor:"hsl(0, 0%, 95%)",bgColorDark:"hsl(0, 0%, 20%)",padding:["16px","32px"]}},computed:Object(i["a"])(Object(i["a"])(Object(i["a"])({},Object(l["d"])({bodyWidth:function(e){return e.env.bodyWidth},drawerbarWidth:function(e){return e.cpn.drawerbar.drawerbarWidth}})),Object(l["b"])(["isSmallScreen"])),{},{paddingCpt:function(){return this.padding[this.isSmallScreen?0:1]},style:function(){return{width:"100%",fontSize:"2em",display:"flex",justifyContent:"center",alignItems:"center"}},titleLeft:function(){var e=this.bodyWidth-this.drawerbarWidth;return e<=1064?this.isSmallScreen?"16px":"32px":"calc((100% - 1000px)/2)"}}),watch:{bodyWidth:function(e){this.setAppbarTitleStyleOverride({left:this.titleLeft,top:"108px",height:"80px",width:"100%",fontSize:"8em",maxWidth:"100%"})}},methods:Object(i["a"])({},Object(l["c"])(["setAppbarHeightExpand","setAppbarTitleStyleOverride"])),mounted:function(){this.setAppbarHeightExpand("120px"),this.setAppbarTitleStyleOverride({left:this.titleLeft,top:"108px",height:"80px",width:"100%",fontSize:"8em",maxWidth:"100%"})}},S=y,C=Object(p["a"])(S,r,o,!1,null,null,null);t["a"]=C.exports},"8a96":function(e,t,n){},f0f3:function(e,t){var n='<h1 id="file啊吧啊吧a对象"><strong>File啊吧啊吧a对象</strong></h1> <pre><code class="language-JavaScript">const fs = require(&#39;fs&#39;);\nvar fileBuffer = fs.readFileSync(path);\nvar fileString = fileBuffer.toString();</code></pre> <h1 id="webview标签和api"><strong>webView标签和API</strong></h1> <pre><code class="language-html">&lt;webview id=&quot;wb&quot;/&gt;</code></pre> <pre><code class="language-JavaScript">var webview = document.querySelector(&#39;#wb&#39;);\nwebview.addEventListener(&#39;did-start-loading&#39;, fun);\n//开始载入\nwebview.addEventListener(&#39;did-stop-loading&#39;, fun);\n//载入完成</code></pre> <ul> <li><strong>preload</strong>=&quot;./xx.js&quot; 载入脚本</li> <li><strong>wb.insertCSS(string)</strong> 注入css样式</li> </ul> <pre><code class="language-JavaScript">wb.insertCSS(&#39;\n    #su {\n        background: red !important;\n    }\n&#39;);</code></pre> <ul> <li><strong>wb.executeJavaScript(string)</strong> 注入js</li> </ul> <pre><code class="language-JavaScript">wb.executeJavaScript(&#39;\n    console.log(&#39;oops&#39;);\n&#39;);</code></pre> <h1 id="window对象"><strong>window对象</strong></h1> <h2 id="windowopen-打开子窗口-返回browserwindowproxy对象">window.open() 打开子窗口 返回BrowserWindowProxy对象</h2> <pre><code>(string html, string name, string feature)</code></pre><h2 id="windowopenerpostmessage-向父窗口传递信息">window.opener.postMessage() 向父窗口传递信息</h2> <p>子窗口</p> <pre><code class="language-JavaScript">window.opener.postMessage(&#39;something...&#39;);\nwindow.opener.postMessage({ type:1, name:&quot;myname&quot;, etc..});</code></pre> <p>父窗口</p> <pre><code class="language-JavaScript">window.addEventListener(&#39;message&#39;, (msg)=&gt;{\n    ..\n})</code></pre> <h2 id="browserwindowproxy类"><strong>BrowserWindowProxy类</strong></h2> <pre><code class="language-js">var subwin = window.open(&#39;...&#39;,&#39;subwin&#39;);</code></pre> <p>关闭子窗口 subwin.close()</p> <h1 id="browserwindow"><strong>BrowserWindow</strong></h1> <pre><code class="language-js">var win = new BrowserWindow({\n    width:.., height:..,\n    frame: false,   //关闭边框\n    backgroundColor: &quot;#000000&quot;, \n    parent: parentWin,  //指定父窗口\n})</code></pre> <h2 id="ready-to-show-事件"><strong>ready-to-show</strong> 事件</h2> <pre><code class="language-js">const {BrowserWindow} = require(&#39;electron&#39;);\nlet win = new BrowserWindow({ show:fasle });\n//once:只运行一次\nwin.once(&#39;ready-to-show&#39;, ()=&gt;{\n    win.show();\n});\n//准备好再显示 防止页面闪烁</code></pre> <h2 id="模态窗口-不常用"><strong>模态窗口</strong> (不常用)</h2> <pre><code class="language-js">let win = new BrowserWindow({ \n    modal:true, \n    x:.., y:..\n});\n//启用模态窗口</code></pre> <h1 id="browserview"><strong>BrowserView</strong></h1> <p>嵌入BrowserWindow的视图</p> <pre><code class="language-js">const { BrowserView, BrowserWindow } = require(&#39;electron&#39;);\nlet win = new BrowserWindow({\n    width: 800, height: 600\n});\nwin.on(&#39;closed&#39;, ()=&gt;{\n    win = null;\n});\nlet view = new BrowserView();\nwin.setBrowserView(view);\nview.setBounds({\n    x: 0, y: 0,\n    width: 300, height: 300\n});\nview.webContents.loadURL(&#39;https://electronjs.org&#39;);\n// 获取webContent实例\nview.destroy();//摧毁视图</code></pre> <h1 id="对话框-dialog">对话框 <strong>dialog</strong></h1> <p>主线程使用 :</p> <pre><code class="language-js">const { dialog } = require(&#39;electron&#39;);\nconsole.log(dialog.showOpenDialog({\n    properties:[&#39;openFile&#39;, &#39;openDirectory&#39;, &#39;multiSelections&#39;]\n}))</code></pre> <p>渲染进程使用 :</p> <pre><code class="language-js">const { dialog } = require(&#39;electron&#39;).remote;\nconsole.log(dialog);</code></pre> <h2 id="涵盖方法">涵盖方法</h2> <ul> <li><strong>showOpenDialog/Sync</strong>([browserWindow, ]options, callback)<ul> <li>options<ul> <li>title String 标题</li> <li>defaultPath String 默认路径</li> <li>buttonLabel String [确认]按钮的文本</li> <li>filters filter[] 过滤格式<pre><code class="language-js">filters: [\n{ name: &#39;显示的名称&#39;, extensions: [&#39;js&#39;, &#39;html&#39;, &#39;过滤的格式&#39;] },\n{ name: &#39;显示的名称&#39;, extensions: [&#39;js&#39;, &#39;html&#39;, &#39;过滤的格式&#39;] }\n]</code></pre> </li> <li>properties String 属性<ul> <li>openFile 选择文件</li> <li>openDirectory 选择文件夹</li> <li>multiSelections 多选</li> <li>promptToCreate 文件路径不存在时提示创建</li> </ul> </li> </ul> </li> <li>callback(res): res[0] = filePath;(showOpenDialog)</li> </ul> </li> <li><strong>showSaveDialog/Sync(option, callback)</strong><pre><code class="language-js">dialog.showSaveDialog({\n  ...\n}, res=&gt;{\n    fs.writeFileSync(res, &#39;content&#39;);\n})</code></pre> </li> <li><strong>showMessageBox/Sync(option, callback)</strong><ul> <li>option<ul> <li>type String<ul> <li>可设为none、info、error、question、warning</li> </ul> </li> <li>buttons String[] 按钮文本</li> <li>title String</li> <li>message String 必填</li> </ul> </li> <li>callback(res): res Integer: 点击的按钮数组的元素的索引</li> </ul> </li> </ul> <h1 id="渲染进程对主线程的通信"><strong>渲染进程对主线程的通信</strong></h1> <pre><code class="language-js">const { ipcMain } = require(&#39;electron&#39;);    //主进程\nconst { ipcRenderer } = require(&#39;electron&#39;);//渲染进程</code></pre> <h2 id="ipcmain">ipcMain</h2> <h3 id="onmsg-event-args">on(&#39;msg&#39;, (event, args)=&gt;{})</h3> <h3 id="eventreplymsg-args">event.reply(&#39;msg&#39;, args)</h3> <h3 id="eventreturnvalue--args">event.returnValue = args;</h3> <h2 id="ipcrenderer">ipcRenderer</h2> <h3 id="sendmsg-args">send(&#39;msg&#39;, args)</h3> <h3 id="sendsyncmsg-args">sendSync(&#39;msg&#39;, args)</h3> <h2 id="同步通信">同步通信</h2> <pre><code class="language-js">ipcMain.on(&#39;sync-A&#39;, (event, arg)=&gt;{\n    event.returnValue = &#39;result..&#39;;\n});</code></pre> <pre><code class="language-js">var res = ipcRenderer.sendSync(&#39;sync-A&#39;, &#39;something..&#39;);\nconsole.log(res); // print result..</code></pre> <h2 id="异步通信">异步通信</h2> <pre><code class="language-js">ipcRenderer.send(&#39;async-A&#39;, &#39;something..&#39;);</code></pre> <pre><code class="language-js">ipcMain.on(&#39;async-A&#39;, (event, arg)=&gt;{\n    event.reply(&#39;async-B&#39;, &#39;I got it&#39;);\n})</code></pre> <pre><code class="language-js">ipcRenderer.on(&#39;async-B&#39;, (event, arg)=&gt;{\n    console.log(arg);\n});</code></pre> <h1 id="主线程对渲染进程通信"><strong>主线程对渲染进程通信</strong></h1> <pre><code class="language-js">mainWindow.webContents.send(&#39;msg&#39;, &#39;something..&#39;);</code></pre> <pre><code class="language-js">ipcRenderer.on(&#39;msg&#39;, (event, arg)=&gt;{\n    console.log(arg);\n});</code></pre> <h1 id="原生菜单-menu">原生菜单 <strong>Menu</strong></h1> <pre><code class="language-js">const { Menu } = require(&#39;electron&#39;)    //主进程\nconst { remote } = require(&#39;electron&#39;)\nconst { Menu, MenuItem } = remote;      // 渲染进程</code></pre> <h2 id="方法">方法</h2> <ul> <li>void - Menu.setApplicationMenu(menu) 设置顶部菜单</li> <li>menu - Menu.getApplicationMenu()</li> <li>menu - Menu.buildFromTemplate(MenuItem[] template)<pre><code class="language-js">var menuItem_0 = { label:&#39;item_1&#39; }\nvar menuItem_1 = { label:&#39;item_2&#39; }\nvar menuItem = {\n    label:&#39;Item_1&#39;,                       //名称\n    click:()=&gt;{},                         //点击回调\n    submenu: [ menuItem_0, menuItem_1 ]   //子菜单\n}\nvar template = [\n    menuItem,\n    { type: &quot;separator&quot; },    //分割线\n    { role: &quot;undo&quot; },         //特殊动作(很多个)\n]</code></pre> </li> <li>void - menu.popup() 弹出菜单</li> </ul> ';e.exports=n},f3d3:function(e,t,n){"use strict";var r=n("356f"),o=n.n(r);o.a}}]);
//# sourceMappingURL=chunk-11c8d7b5.6083ea0b.js.map